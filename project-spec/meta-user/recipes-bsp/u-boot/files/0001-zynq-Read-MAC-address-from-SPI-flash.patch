From 5e2049c340151385996cd4385dc3a2a15b15041a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ionel=20B=C4=83di=C8=99or?= <ionel.badisor@gmail.com>
Date: Wed, 8 Sep 2021 16:00:07 +0300
Subject: [PATCH] zynq: Read MAC address from SPI flash

Configurations to enable/use:
  CONFIG_ZYNQ_MAC_IN_FLASH=y
If mac address is in OTP area
  CONFIG_ZYNQ_GEM_SPI_MAC_OTP=y
Address offset in hexa:
  CONFIG_ZYNQ_GEM_SPI_MAC_OFFSET=0x?????
---
 board/xilinx/Kconfig        | 24 ++++++++++++-------
 board/xilinx/common/board.c | 47 ++++++++++++++++++++++++-------------
 2 files changed, 46 insertions(+), 25 deletions(-)

diff --git a/board/xilinx/Kconfig b/board/xilinx/Kconfig
index 64507b5d84..5fa14166db 100644
--- a/board/xilinx/Kconfig
+++ b/board/xilinx/Kconfig
@@ -57,23 +57,29 @@ config BOOT_SCRIPT_OFFSET
 	help
 	   Specifies distro boot script offset in NAND/QSPI/NOR flash.
 
-config ZYNQ_MAC_IN_EEPROM
-	bool "Reading MAC address from EEPROM"
+config ZYNQ_MAC_IN_FLASH
+	bool "Reading MAC address from FLASH"
 	help
-	  Enable this option if your MAC address is saved in eeprom and
-	  xlnx,eeprom DT property in chosen node points to it.
+	  Enable this option if your MAC address is saved in flash and
+	  xlnx,flash DT property in chosen node points to it.
 
-if ZYNQ_MAC_IN_EEPROM
+if ZYNQ_MAC_IN_FLASH
 
-config ZYNQ_GEM_I2C_MAC_OFFSET
-	hex "Set the I2C MAC offset"
+config ZYNQ_GEM_SPI_MAC_OTP
+	bool "Reading MAC address from OTP AREA"
+	help
+	  Enable this option if your MAC address is saved in flash OTP area.
+
+config ZYNQ_GEM_SPI_MAC_OFFSET
+	hex "Set the SPI MAC offset"
 	default 0x0
-	depends on DM_I2C
+	depends on DM_SPI
 	help
-	  Set the MAC offset for i2C.
+	  Set the MAC offset for spi.
 
 endif
 
+
 config CMD_FRU
 	bool "FRU information for product"
 	help
diff --git a/board/xilinx/common/board.c b/board/xilinx/common/board.c
index 3dcdad7877..68b9e25e3d 100644
--- a/board/xilinx/common/board.c
+++ b/board/xilinx/common/board.c
@@ -10,6 +10,8 @@
 #include <asm/sections.h>
 #include <dm/uclass.h>
 #include <i2c.h>
+#include <spi.h>
+#include <spi_flash.h>
 #include <linux/sizes.h>
 #include <malloc.h>
 #include "board.h"
@@ -20,29 +22,42 @@
 
 #include "fru.h"
 
-#if defined(CONFIG_ZYNQ_GEM_I2C_MAC_OFFSET)
+#if defined(CONFIG_ZYNQ_GEM_SPI_MAC_OFFSET)
+#if defined(CONFIG_ZYNQ_GEM_SPI_MAC_OTP)
+#define CMD_OTPREAD_ARRAY_FAST 0x4b
+#endif
 int zynq_board_read_rom_ethaddr(unsigned char *ethaddr)
 {
 	int ret = -EINVAL;
-	struct udevice *dev;
-	ofnode eeprom;
 
-	eeprom = ofnode_get_chosen_node("xlnx,eeprom");
-	if (!ofnode_valid(eeprom))
-		return -ENODEV;
+	struct spi_flash *flash;
+	flash = spi_flash_probe(CONFIG_SF_DEFAULT_BUS,
+				CONFIG_SF_DEFAULT_CS,
+				CONFIG_SF_DEFAULT_SPEED,
+				CONFIG_SF_DEFAULT_MODE);
+
+	if (!flash) {
+		printf("no flash\n");
+		printf("SPI(bus:%u cs:%u) probe failed\n",
+			CONFIG_SF_DEFAULT_BUS,
+			CONFIG_SF_DEFAULT_CS);
+		return 0;
+	}
 
-	debug("%s: Path to EEPROM %s\n", __func__,
-	      ofnode_read_chosen_string("xlnx,eeprom"));
 
-	ret = uclass_get_device_by_ofnode(UCLASS_I2C_EEPROM, eeprom, &dev);
-	if (ret)
-		return ret;
+#if defined(CONFIG_ZYNQ_GEM_SPI_MAC_OTP)
+	/*
+	 * Set the cmd to otp read
+	 */
+	flash->read_opcode = CMD_OTPREAD_ARRAY_FAST;
+#endif
+	if (spi_flash_read(flash, CONFIG_ZYNQ_GEM_SPI_MAC_OFFSET, 6, ethaddr))
+		printf("%s:SPI MAC address read failed\n", __func__);
 
-	ret = dm_i2c_read(dev, CONFIG_ZYNQ_GEM_I2C_MAC_OFFSET, ethaddr, 6);
-	if (ret)
-		debug("%s: I2C EEPROM MAC address read failed\n", __func__);
-	else
-		debug("%s: I2C EEPROM MAC %pM\n", __func__, ethaddr);
+	printf("%s: SPI ethaddr: %02X:%02X:%02X:%02X:%02X:%02X\n", __func__, ethaddr[0], ethaddr[1], ethaddr[2], ethaddr[3], ethaddr[4], ethaddr[5]);
+
+	if (flash)
+		spi_flash_free(flash);
 
 	return ret;
 }
-- 
2.17.1

